#+TITLE: Emacs configuration

** Install missing packages

#+BEGIN_SRC emacs-lisp
  (setq package-archives
	'(("melpa" . "https://melpa.org/packages/")
	  ("melpa-stable" . "https://stable.melpa.org/packages/")
	  ("gnu" . "https://elpa.gnu.org/packages/")))
  (require 'package)
  (package-initialize)
  (setq install-packages
	'(quelpa
	  tree-sitter-langs
	  tree-sitter
	  python-mode
	  anaconda-mode
	  lsp-haskell
	  haskell-mode
	  clojure-mode
	  yasnippet-snippets
	  cider
	  rust-mode
	  plantuml-mode
	  cider

	  clojure-mode-extra-font-locking
	  rust-mode
	  simple-httpd))
  (unless package-archive-contents
    (package-refresh-contents))
  (dolist (pkg install-packages)
    (unless (package-installed-p pkg)
      (package-install pkg)))

#+END_SRC




** Required Packages

#+BEGIN_SRC emacs-lisp
  (require 'package)
  (require 'use-package)
  (require 'tree-sitter)
  (require 'tree-sitter-langs)
  (require 'rust-mode)


  (use-package simple-httpd :ensure t)
#+END_SRC





** Custom Variables


*** Generated customizations

#+BEGIN_SRC emacs-lisp
  (custom-set-variables
   ;; custom-set-variables was added by Custom.
   ;; If you edit it by hand, you could mess it up, so be careful.
   ;; Your init file should contain only one such instance.
   ;; If there is more than one, they won't work right.
   '(ansi-color-faces-vector
     [default default default italic underline success warning error])
   '(custom-enabled-themes '(nord))
   '(custom-safe-themes
     '("37768a79b479684b0756dec7c0fc7652082910c37d8863c35b702db3f16000f8" default))
   '(indent-tabs-mode nil)
   '(menu-bar-mode t)
   '(package-selected-packages
     '(quelpa tree-sitter-langs tree-sitter typescript-mode python-mode anaconda-mode lsp-haskell haskell-mode clojure-mode yasnippet-snippets nord-theme))
   '(tab-always-indent t)
   '(tool-bar-mode t)
   '(warning-suppress-types '((comp) (comp) (comp) (comp))))
  (custom-set-faces
   ;; custom-set-faces was added by Custom.
   ;; If you edit it by hand, you could mess it up, so be careful.
   ;; Your init file should contain only one such instance.
   ;; If there is more than one, they won't work right.
   )
  (when (version<= "26.0.50" emacs-version)
    (global-display-line-numbers-mode))
  ;; Backup directory-file-name
  (setq
   backup-by-copying t      ; don't clobber symlinks
   backup-directory-alist
   '(("." . "~/Temp/backup/"))    ; don't litter my fs tree
   delete-old-versions t
   kept-new-versions 6
   kept-old-versions 2
   version-control t)       ; use versioned backups
#+END_SRC

** CTags configuration
#+BEGIN_SRC emacs-lisp
  (setq path-to-ctags "/usr/local/bin/ctags")
  (setq path-to-ctags-out-file "~/.emacs.d/Tags/TAGS")

  (defun create-tags (dir-name)
    "Create tags file."
    (interactive "DDirectory: ")
    (shell-command 
     (format "%s -f %s -e -R %s" path-to-ctags path-to-ctags-out-file (directory-file-name dir-name))))

#+END_SRC

** Yasnippet configuration
#+BEGIN_SRC emacs-lisp
  (require 'yasnippet)
  (yas-global-mode 1)
#+END_SRC

** RSS feed configuration

#+begin_src emacs-lisp
  (setq elfeed-feeds
      '(("https://feeds.arstechnica.com/arstechnica/index" arstechnica)
        ("https://rss.sciencedirect.com/publication/science/23527110" softwareX)
        ))
  (setf url-queue-timeout 30)
#+end_src


** Autocomplete

#+begin_src emacs-lisp
  (use-package auto-complete
    :ensure t
    :init
    (progn
      (ac-config-default)
      (global-auto-complete-mode t)
      ))  
#+end_src


** Programming Languages

*** C/C++ Configurations
#+begin_src emacs-lisp
  (use-package modern-cpp-font-lock
    :ensure t)
  (setq-default indent-tabs-mode nil)
  (setq tab-width 4)
  (setq c-default-style "bsd"
        c-basic-offset 4)

#+end_src

*** Plantuml mode

#+begin_src emacs-lisp
  (setq org-plantuml-jar-path (expand-file-name "~/.emacs.d/plantuml.jar"))
  (with-eval-after-load 'org
    (org-babel-do-load-languages 'org-babel-load-languages '((ruby . t)
                                                             (plantuml . t)
                                                             )))
  (add-hook 'org-babel-after-execute-hook
            (lambda ()
              (when org-inline-image-overlays
                (org-redisplay-inline-images))))
#+end_src

*** Rust mode
#+begin_src emacs-lisp
  (add-hook 'rust-mode-hook
            (lambda () (setq indent-tabs-mode nil)))
#+end_src

*** Haskell Configurations
#+begin_src emacs-lisp
  ;;haskell-mode
  (add-hook 'haskell-mode-hook 'turn-on-haskell-doc-mode)

  ;; hslint on the command line only likes this indentation mode;
  ;; alternatives commented out below.
  (add-hook 'haskell-mode-hook 'turn-on-haskell-indentation)
  ;;(add-hook 'haskell-mode-hook 'turn-on-haskell-indent)
  ;;(add-hook 'haskell-mode-hook 'turn-on-haskell-simple-indent)

  ;; Ignore compiled Haskell files in filename completions
  (add-to-list 'completion-ignored-extensions ".hi")
#+end_src


*** Latex mode

#+begin_src emacs-lisp
  (setq-default TeX-engine 'xetex)
  (setq-default TeX-PDF-mode t)
   (add-hook 'TeX-mode-hook 'prettify-symbols-mode)
    (add-hook 'TeX-mode-hook 'TeX-fold-mode)
#+end_src



*** SBCL Configuration

#+BEGIN_SRC emacs-lisp
  ;;; The SBCL binary and command-line arguments
  (setq inferior-lisp-program "/usr/bin/sbcl --noinform")
  (require 'slime)
  (slime-setup)
#+END_SRC




 
